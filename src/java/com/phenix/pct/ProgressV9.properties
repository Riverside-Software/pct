ProgressV9.0=DEFINE VARIABLE i AS INTEGER NO-UNDO INITIAL ?.\n\
DEFINE NEW SHARED VARIABLE pctVerbose AS LOGICAL NO-UNDO INITIAL {1}.\n\
DEFINE VARIABLE noErrorOnQuit AS LOGICAL NO-UNDO INITIAL {2}.\n\
DEFINE TEMP-TABLE ttParams NO-UNDO FIELD key AS CHARACTER FIELD val AS CHARACTER.\n\
FUNCTION getParameter RETURNS CHARACTER (k AS CHARACTER).\n\
  FIND ttParams WHERE ttParams.key EQ k NO-LOCK NO-ERROR.\n\
  RETURN (IF AVAILABLE ttParams THEN ttParams.val ELSE ?).\n\
END FUNCTION.\n\n
ProgressV9.1=IF pctVerbose THEN MESSAGE "Trying to connect to : {0}".\n\
CONNECT VALUE("{0}") NO-ERROR.\n\
IF ERROR-STATUS:ERROR THEN DO:\n\
  MESSAGE "Unable to connect to {0}".\n\
  RUN returnValue(14).\n\
  QUIT.\n\
END.\n
ProgressV9.2=IF pctVerbose THEN MESSAGE SUBSTITUTE("Creating alias &1 for database &2", "{0}", "{1}").\n\
CREATE ALIAS "{0}" FOR DATABASE VALUE(LDBNAME({1})) {2}.\n
ProgressV9.3=ASSIGN PROPATH="{0}" + PROPATH.\n
ProgressV9.4=IF pctVerbose THEN MESSAGE "PROPATH : " + PROPATH.\n\
IF pctVerbose THEN MESSAGE "RUN {0} {1}".\n\
RunBlock:\n\
DO ON QUIT UNDO, RETRY:\n\
IF RETRY THEN DO:\n MESSAGE "QUIT statement found".\n IF noErrorOnQuit THEN i = 0. ELSE i = 66.\n LEAVE RunBlock.\nEND.\n\
RUN VALUE("{0}") {1} NO-ERROR.\n\
END.\n
ProgressV9.5=PROCEDURE returnValue PRIVATE.\n\
  DEFINE INPUT PARAMETER retVal AS INTEGER NO-UNDO.\n\
  IF pctVerbose THEN MESSAGE SUBSTITUTE("Return value : &1", retVal).\n\
  OUTPUT TO VALUE("{0}") CONVERT TARGET "utf-8".\n\
  PUT UNFORMATTED retVal SKIP.\n\
  OUTPUT CLOSE.\n\
END PROCEDURE.\n
ProgressV9.6=DO ON ERROR UNDO, LEAVE: CREATE ttParams. ASSIGN ttParams.key = "{0}" ttParams.val = "{1}". END.\n
ProgressV9.8=DEFINE VARIABLE {0} AS CHARACTER NO-UNDO.\n
ProgressV9.9=PROCEDURE writeOutputParam PRIVATE.\n\
  DEFINE INPUT PARAMETER prm AS CHARACTER NO-UNDO.\n\
  DEFINE INPUT PARAMETER outFile AS CHARACTER NO-UNDO.\n\
  IF pctVerbose THEN MESSAGE SUBSTITUTE("OUTPUT PARAMETER : &1", prm).\n\
  OUTPUT TO VALUE(outFile) CONVERT TARGET "utf-8".\n\
  PUT UNFORMATTED prm SKIP.\n\
  OUTPUT CLOSE.\n\
END PROCEDURE.\n
ProgressV9.10=IF ERROR-STATUS:ERROR THEN ASSIGN i = 1.\n\
IF (i EQ ?) THEN ASSIGN i = INTEGER (ENTRY(1, RETURN-VALUE, " ")) NO-ERROR.\n\
IF (i EQ ?) THEN ASSIGN i = 1.\n\
RUN returnValue(i).\n
ProgressV9.11=RUN writeOutputParam (INPUT {0}, INPUT "{1}").\n
ProgressV9.12=QUIT.\n
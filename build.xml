<?xml version="1.0" encoding="utf-8"?>

<project name="PCT" default="dist">

  <property file="${basedir}/pct.build.properties" />
  <property environment="env" />

  <!-- Some directories definitions -->
  <property name="src.java" location="src/java" />
  <property name="src.progress" location="src/progress" />
  <property name="src.test" location="src/test" />
  <property name="build" location="build" />
  <property name="build-v9" location="build-v9" />
  <property name="build-v10" location="build-v10" />
  <property name="dist" location="lib" />
  <property name="dist-lite" location="bootstrap" />
  <property name="doc" location="javadoc" />
  <property name="check" location="check" />
  <property name="website" location="website" />
  <property name="testdir" location="testbox" />
  <property name="junit" location="junit-report" />

  <!-- Properties that control various build options -->
  <property name="debug" value="true" />
  <property name="deprecation" value="false" />
  <property name="optimize" value="false" />
  <property name="javac.source" value="1.2" />
  <property name="javac.target" value="1.2" />

  <!-- PCT Version -->
  <property name="pct.version" value="0.10" />

  <tstamp>
    <format property="year" pattern="yyyy" />
  </tstamp>
  <echo message="Using ${DLC9} to compile in v9" />
  <echo message="Using ${DLC10} to compile in v10" />

  <target name="init" description="Creates required directories">
    <mkdir dir="${build}" />
    <mkdir dir="${build-v9}" />
    <mkdir dir="${build-v10}" />
    <mkdir dir="${dist}" />
  </target>

  <target name="build" depends="init" description="Java source files compilation">
    <javac srcdir="${src.java}" destdir="${build}" debug="${debug}" source="${javac.source}" target="${javac.target}" deprecation="${deprecation}" optimize="${optimize}">
      <include name="com/phenix/pct/*.java" />
      <include name="net/cordova/prounit/*.java" />
    </javac>
    <copy todir="${build}">
      <fileset dir="${src.java}" includes="**/*.properties" />
    </copy>
  </target>

  <target name="jar-lite" depends="build" description="Bootstrap JAR file">
    <jar jarfile="${dist}/bootstrap.jar">
      <fileset dir="${build}">
        <include name="com/phenix/pct/*.class" />
        <include name="com/phenix/pct/*.properties" />
        <include name="bootstrap.properties" />
        <exclude name="com/phenix/pct/*Test.class" />
      </fileset>
    </jar>
  </target>

  <target name="declare-bootstrap" depends="jar-lite" description="Bootstrap tasks declaration">
    <taskdef resource="bootstrap.properties" classpath="${dist}/bootstrap.jar" />
  </target>

  <target name="pbuild" depends="declare-bootstrap" description="Progress code compilation">
    <bootstrapCompile destdir="${build-v9}" md5="true" minSize="true" graphicalMode="false" dlcHome="${DLC9}" includedPL="false">
      <fileset dir="${src.progress}">
        <include name="pct/*.p" />
      </fileset>
      <propath>
        <pathelement location="${src.progress}" />
      </propath>
    </bootstrapCompile>
    <bootstrapCompile destdir="${build-v10}" md5="true" minSize="true" graphicalMode="false" dlcHome="${DLC10}" includedPL="false">
      <fileset dir="${src.progress}">
        <include name="pct/*.p" />
      </fileset>
      <propath>
        <pathelement location="${src.progress}" />
      </propath>
    </bootstrapCompile>
    <bootstrapLibrary destfile="${build}/pct9.pl" dlcHome="${DLC9}">
      <fileset dir="${build-v9}">
        <include name="pct/*.r" />
      </fileset>
    </bootstrapLibrary>
    <bootstrapLibrary destfile="${build}/pct10.pl" dlcHome="${DLC10}">
      <fileset dir="${build-v10}">
        <include name="pct/*.r" />
      </fileset>
    </bootstrapLibrary>
  </target>

  <target name="jar" depends="pbuild" description="JAR file generation">
    <jar jarfile="${dist}/PCT.jar">
      <fileset dir="${build}">
        <include name="com/phenix/pct/*.class" />
        <include name="com/phenix/pct/*.properties" />
        <include name="net/cordova/prounit/*.class" />
        <include name="PCT.properties" />
        <include name="pct9.pl" />
        <include name="pct10.pl" />
        <exclude name="com/phenix/pct/*Test.class" />
      </fileset>
      <manifest>
        <attribute name="Built-By" value="${user.name}" />
        <section name="common">
          <attribute name="Specification-Title" value="PCT" />
          <attribute name="Specification-Version" value="${pct.version}" />
          <attribute name="Specification-Vendor" value="Phenix Engineering" />
          <attribute name="Implementation-Title" value="PCT" />
          <attribute name="Implementation-Version" value="${pct.version} ${TODAY}" />
          <attribute name="Implementation-Vendor" value="Phenix Engineering" />
        </section>
      </manifest>
    </jar>
  </target>

  <target name="declare" depends="jar" description="PCT tasks declaration">
    <taskdef resource="PCT.properties" classpath="${dist}/PCT.jar" />
  </target>

  <target name="test-build" depends="jar" description="Builds junit tests">
    <javac srcdir="${src.test}" destdir="${build}" debug="${debug}" source="${javac.source}" target="${javac.target}" deprecation="${deprecation}" optimize="${optimize}">
      <include name="org/apache/tools/ant/*.java" />
      <include name="com/phenix/pct/*.java" />
      <include name="net/cordova/prounit/*.java" />
      <classpath>
        <pathelement location="${build}" />
        <pathelement location="junit.jar" />
      </classpath>
    </javac>
  </target>

  <target name="prepare-test" depends="test-build" description="Prepares tests (copy files and taskdef)">
    <!-- Copy Progress files so that there isn't a conflict if PCT is already installed -->
    <mkdir dir="${testdir}" />
    <copy todir="${testdir}">
      <fileset dir="${src.test}" includes="*.xml,*.pxg,*.xpxg,ubroker.template,conmgr.template" />
      <!--      <fileset dir="src" includes="progress/**" /> -->
    </copy>
    <!-- New taskdef... JUnit testing ANT tasks is a real pain... -->
    <!-- To have consistent behavior between command line ANT and eclipse -->
    <!-- WARNING 1 : If you want to run this task from command line, be sure to remove -->
    <!-- ant-junit.jar from you %ANT_HOME%/lib directory -->
    <!-- WARNING 2 : If you want to run this task from Eclipse's Ant plugin, be sure to -->
    <!-- remove ant-junit.jar from your ClassPath : Window -> Preferences, section Ant -> Runtime -->
    <!-- Classpath tab, and remove ant-junit.jar from Ant Home Entries -->
    <!-- WARNING 3 : If you want to run tests from Eclipse's JUnit plugin, be sure to add -->
    <!-- the followings : -->
    <!--  * In Arguments tab, working directory should be set to ${workspace_loc:PCT/testbox} -->
    <!--  * In Classpath tab, add ant-junit and ant-launcher in User Entries -->
    <!--  * In Environment entries, add a DLC variable pointing to your DLC installation -->
    <!--  * And remember you always have to run the prepare-test task ... -->
    <!--<taskdef name="junit" classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask" onerror="report">
      <classpath>
        <pathelement location="${basedir}/ant.jar" />
        <pathelement location="${basedir}/ant-junit.jar" />
        <pathelement location="${basedir}/junit.jar" />
        <pathelement location="${basedir}/ant-launcher.jar" />
      </classpath>
    </taskdef>-->
  </target>

  <target name="test" depends="prepare-test" description="Starts tests">
    <junit printsummary="yes" haltonfailure="no" filtertrace="off" fork="yes" dir="${testdir}" showoutput="true">
      <classpath>
        <pathelement location="${build}" />
      </classpath>
      <formatter type="xml" />
      <batchtest>
        <fileset dir="${build}">
          <include name="com/phenix/pct/PCT*Test.class" />
          <!-- A few problems for now... -->
          <!--<include name="net/cordova/prounit/*Test.class" />-->
        </fileset>
      </batchtest>
    </junit>
    <junitreport>
      <fileset dir="${basedir}">
        <include name="TEST-*.xml" />
      </fileset>
      <report format="frames" styledir="${basedir}" todir="${junit}" />
    </junitreport>
    <delete>
      <fileset dir="." includes="TEST-*.xml" />
    </delete>
  </target>

  <target name="javadoc" depends="build" description="API documentation creation">
    <mkdir dir="${doc}" />
    <javadoc destdir="${doc}" useexternalfile="yes" charset="utf-8">
      <packageset dir="${src.java}" />
      <group title="PCT Core" packages="com.phenix.pct.*" />
      <bottom>Copyright Â© 2003-${year} Gilles QUERRET. All Rights Reserved.</bottom>
      <link href="http://java.sun.com/j2se/1.5.0/docs/api/" />
      <!-- Seems down -->
      <!--<link href="http://nagoya.apache.org/gump/javadoc/ant/build/javadocs/"/>-->
    </javadoc>
  </target>

  <target name="bindist" depends="jar,pbuild,website" description="Generates binary zip/tarball archive">
    <zip destfile="pct-bin-${pct.version}.zip">
      <zipfileset prefix="pct" dir="." filemode="644">
        <include name="lib/PCT.jar" />
        <include name="CHANGELOG" />
        <include name="website/**" />
      </zipfileset>
    </zip>
  </target>

  <target name="srcdist" description="Generates source zip/tarball archive">
    <zip destfile="pct-src-${pct.version}.zip">
      <zipfileset prefix="pct" dir="." filemode="644">
        <include name="src/**" />
        <include name="build.xml" />
        <include name="conf/**" />
        <include name="doc/**" />
        <include name="CHANGELOG" />
      </zipfileset>
    </zip>
  </target>

  <target name="dist" depends="srcdist,bindist" />

  <target name="clean" description="Nettoyage">
    <delete dir="${build}" />
    <delete dir="${build-v9}" />
    <delete dir="${build-v10}" />
    <delete dir="${dist}" />
    <delete dir="${doc}" />
    <delete dir="${check}" />
    <delete dir="${website}" />
    <delete dir="${testdir}" />
    <delete dir="sports2000" />
    <delete dir="${junit}" />
    <delete>
      <fileset dir=".">
        <include name="pct*.tar.gz" />
        <include name="pct*.zip" />
        <include name="TEST*.xml" />
      </fileset>
    </delete>
  </target>

  <target name="website" depends="javadoc,sports2000doc,test" description="Generates files used for the pct.sf.net website">
    <delete dir="${website}" />
    <mkdir dir="${website}" />
    <loadfile property="right-banner" srcFile="${basedir}/doc/right-banner.include" />
    <copy todir="${website}">
      <fileset dir="doc">
        <include name="*.html" />
        <include name="*.css" />
        <include name="*.xsl" />
      </fileset>
      <fileset dir=".">
        <include name="CHANGELOG" />
        <include name="${doc}/**" />
      </fileset>
      <filterset>
        <filter token="RIGHT_BANNER" value="${right-banner}" />
      </filterset>
    </copy>
    <copy todir="${website}">
      <fileset dir="doc">
        <include name="back.png" />
        <include name="ss*.png" />
      </fileset>
    </copy>
    <copy todir="${website}/sports2000">
      <fileset dir="sports2000/doc">
        <include name="**" />
      </fileset>
    </copy>
    <copy todir="${website}/junit">
      <fileset dir="${junit}">
        <include name="**" />
      </fileset>
    </copy>
    <copy todir="${website}/javadoc">
      <fileset dir="${doc}">
        <include name="**" />
      </fileset>
    </copy>
    <zip destfile="${website}/sample1.zip" whenempty="create">
      <zipfileset dir="doc/quickstart-samples/step1" prefix="MyProject" />
    </zip>
    <zip destfile="${website}/sample2.zip" whenempty="create">
      <zipfileset dir="doc/quickstart-samples/step2" prefix="MyProject" />
    </zip>
    <zip destfile="${website}/sample3.zip" whenempty="create">
      <zipfileset dir="doc/quickstart-samples/step3" prefix="MyProject" />
    </zip>
    <zip destfile="${website}/sample4.zip" whenempty="create">
      <zipfileset dir="doc/quickstart-samples/step4" prefix="MyProject" />
    </zip>
    <zip destfile="${website}/sample5.zip" whenempty="create">
      <zipfileset dir="doc/quickstart-samples/step5" prefix="MyProject" />
    </zip>
  </target>

  <target name="sports2000doc" depends="declare">
    <mkdir dir="sports2000" />
    <mkdir dir="sports2000/doc" />
    <mkdir dir="sports2000/doc/files" />
    <property name="sports2000-doc" location="sports2000/doc" />
    <exec executable="${DLC10}/bin/_dbutil" dir="sports2000">
      <env key="DLC" value="${DLC10}" />
      <arg value="procopy" />
      <arg path="${DLC10}/sports2000" />
      <arg value="sports2000" />
    </exec>
    <PCTSchemaDoc file="sports2000/sports2000.xml" dlcHome="${DLC10}">
      <PCTConnection dbDir="sports2000" dbName="sports2000" singleUser="true" />
    </PCTSchemaDoc>
    <style in="sports2000/sports2000.xml" style="doc/SchemaDoc.xsl" out="sports2000/output.txt">
      <param name="outputdir" expression="${sports2000-doc}" />
    </style>
  </target>

  <target name="upload" description="Quick reminder on how to upload files">
    <input message="Sourceforge username : " addproperty="sf.user" />
    <input message="Sourceforge password : " addproperty="sf.pass" />
    <scp todir="${sf.user}:${sf.pass}@shell.sourceforge.net:/home/groups/p/pc/pct/htdocs/">
      <fileset dir="website" />
    </scp>
    <ftp userid="anonymous" password="" server="upload.sourceforge.net" binary="true" remotedir="/incoming">
      <fileset dir="." includes="pct*.zip" />
    </ftp>
  </target>

</project>
